import discord
from discord.ext import commands
from discord.ui import Button, View, Modal, TextInput
import logging
import asyncio

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞
BOT_TOKEN = "MTMwMTkyMjM4OTc4MDg2MTAyOQ.GPJnWW.6ew5eltuNa9sC07xeAE0BvN9YFn0DSec5M5s2Q"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
SETTINGS_CHANNEL_ID = 1345732564026916984

# –ù–∞–∑–≤–∞–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏—è
BUTTONS = {
    "add_slot": {"emoji": "‚ûï", "description": "–î–æ–±–∞–≤–∏—Ç—å 1 —Å–ª–æ—Ç –≤ –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É"},
    "remove_slot": {"emoji": "‚ûñ", "description": "–£–±—Ä–∞—Ç—å 1 —Å–ª–æ—Ç —Å –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç—ã"},
    "lock_channel": {"emoji": "üîí", "description": "–†–∞–∑—Ä–µ—à–∏—Ç—å/–ó–∞–ø—Ä–µ—Ç–∏—Ç—å –≤—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤ –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É"},
    "toggle_voice": {"emoji": "üîä", "description": "–ó–∞–±—Ä–∞—Ç—å/–í—ã–¥–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≥–æ–≤–æ—Ä–∏—Ç—å –≤ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ"},
    "kick_user": {"emoji": "üë¢", "description": "–ò—Å–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç—ã"},
    "change_bitrate": {"emoji": "üì∂", "description": "–ò–∑–º–µ–Ω–∏—Ç—å –±–∏—Ç—Ä–µ–π—Ç –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç—ã"},
    "set_slots": {"emoji": "#Ô∏è‚É£", "description": "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤ –≤ –∫–æ–º–Ω–∞—Ç–µ"},
    "transfer_ownership": {"emoji": "üëë", "description": "–ü–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∞–≤–æ –≤–ª–∞–¥–µ–Ω–∏—è –∫–æ–º–Ω–∞—Ç–æ–π"},
    "rename_channel": {"emoji": "‚úèÔ∏è", "description": "–°–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç—ã"},
    "manage_permissions": {"emoji": "üõÇ", "description": "–í—ã–¥–∞—Ç—å/–ó–∞–±—Ä–∞—Ç—å –¥–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É"}
}

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–æ–≤
CREATE_CHANNEL_NAME = "–°–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª"
AFK_CHANNEL_NAME = "AFK"
VOICE_CHANNELS_CATEGORY_NAME = "–ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã"

# –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –±–∏—Ç—Ä–µ–π—Ç—ã
ALLOWED_BITRATES = [64000, 96000, 128000, 256000, 384000]

class ChannelSettingsView(View):
    def __init__(self):
        super().__init__(timeout=None)
        for custom_id, button in BUTTONS.items():
            self.add_item(Button(label="", emoji=button["emoji"], custom_id=custom_id))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–º–µ—Ä–µ–Ω–∏–π
intents = discord.Intents.default()
intents.message_content = True
intents.voice_states = True
intents.guilds = True
intents.members = True
intents.messages = True

bot = commands.Bot(command_prefix="!", intents=intents)



class RenameChannelModal(Modal):
    def __init__(self, voice_channel: discord.VoiceChannel):  # Ensure correct typehint
        super().__init__(title="–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∫–∞–Ω–∞–ª")
        self.voice_channel = voice_channel
        self.new_name_input = TextInput(label="–ù–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞", placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ",
                                        required=True, default=voice_channel.name)
        self.add_item(self.new_name_input)

    async def on_submit(self, interaction: discord.Interaction):
        new_name = self.new_name_input.value.strip()
        logging.info(f"–ü–æ–ø—ã—Ç–∫–∞ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –Ω–∞: {new_name}")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª–∏–Ω—ã –Ω–∞–∑–≤–∞–Ω–∏—è
        if not (1 <= len(new_name) <= 100):
            await interaction.response.send_message("–ù–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 100 —Å–∏–º–≤–æ–ª–æ–≤.", ephemeral=True)
            return

        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞. Use voice_channel, not interaction.channel.
            permissions = self.voice_channel.permissions_for(interaction.guild.me)
            if not permissions.manage_channels:
                await interaction.response.send_message("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
                return

            # –ü—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∫–∞–Ω–∞–ª
            await self.voice_channel.edit(name=new_name)
            await interaction.response.send_message(f"–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ **{new_name}**.", ephemeral=True)
            logging.info(f"–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {new_name}")
        except discord.Forbidden:
            await interaction.response.send_message("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è.", ephemeral=True)
            logging.error("–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è")
        except discord.HTTPException as e:
            await interaction.response.send_message(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è: {e}", ephemeral=True)
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞–∑–≤–∞–Ω–∏—è: {e}")


class ChangeBitrateModal(Modal):
    def __init__(self, voice_channel):
        super().__init__(title="–ò–∑–º–µ–Ω–∏—Ç—å –±–∏—Ç—Ä–µ–π—Ç –∫–∞–Ω–∞–ª–∞")
        self.voice_channel = voice_channel
        bitrate_options = "\n".join([f"{bitrate // 1000} kbps" for bitrate in ALLOWED_BITRATES])
        self.new_bitrate_input = TextInput(label="–ù–æ–≤—ã–π –±–∏—Ç—Ä–µ–π—Ç (kbps)", placeholder=f"–î–æ—Å—Ç—É–ø–Ω—ã–µ: {bitrate_options}",
                                           required=True)
        self.add_item(self.new_bitrate_input)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            new_bitrate_kbps = int(self.new_bitrate_input.value)
            new_bitrate = new_bitrate_kbps * 1000

            if new_bitrate not in ALLOWED_BITRATES:
                await interaction.response.send_message(f"–ù–µ–≤–µ—Ä–Ω—ã–π –±–∏—Ç—Ä–µ–π—Ç. –î–æ—Å—Ç—É–ø–Ω—ã–µ: "
                                                         f"{', '.join([str(b // 1000) for b in ALLOWED_BITRATES])} kbps",
                                                         ephemeral=True)
                return

            await self.voice_channel.edit(bitrate=new_bitrate)
            await interaction.response.send_message(f"–ë–∏—Ç—Ä–µ–π—Ç –∫–∞–Ω–∞–ª–∞ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {new_bitrate_kbps} kbps.", ephemeral=True)
        except ValueError:
            await interaction.response.send_message("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –±–∏—Ç—Ä–µ–π—Ç–∞.",
                                                    ephemeral=True)
        except discord.Forbidden:
            await interaction.response.send_message("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –±–∏—Ç—Ä–µ–π—Ç–∞ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
        except discord.HTTPException as e:
            await interaction.response.send_message(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –±–∏—Ç—Ä–µ–π—Ç–∞: {e}", ephemeral=True)


class SetSlotsModal(Modal):
    def __init__(self, voice_channel):
        super().__init__(title="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤")
        self.voice_channel = voice_channel
        self.new_slots_input = TextInput(label="–ù–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤", placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤",
                                        required=True)
        self.add_item(self.new_slots_input)

    async def on_submit(self, interaction: discord.Interaction):
        try:
            new_slots = int(self.new_slots_input.value)
            if not (0 <= new_slots <= 99):
                await interaction.response.send_message("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–µ–∂–¥—É 0 –∏ 99.", ephemeral=True)
                return

            await self.voice_channel.edit(user_limit=new_slots)
            await interaction.response.send_message(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ {new_slots}.", ephemeral=True)
        except ValueError:
            await interaction.response.send_message("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ—Ç–æ–≤.",
                                                    ephemeral=True)
        except discord.Forbidden:
            await interaction.response.send_message("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ—Ç–æ–≤ –≤ –∫–∞–Ω–∞–ª–µ.",
                                                    ephemeral=True)
        except discord.HTTPException as e:
            await interaction.response.send_message(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ—Ç–æ–≤: {e}", ephemeral=True)


class TransferOwnershipModal(Modal):
    def __init__(self, voice_channel):
        super().__init__(title="–ü–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∞–≤–æ –≤–ª–∞–¥–µ–Ω–∏—è")
        self.voice_channel = voice_channel
        self.user_input = TextInput(label="–£–∫–∞–∂–∏—Ç–µ ID –∏–ª–∏ —É–ø–æ–º—è–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", placeholder="–í–≤–µ–¥–∏—Ç–µ ID –∏–ª–∏ @—É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", required=True)
        self.add_item(self.user_input)

    async def on_submit(self, interaction: discord.Interaction):
        user_input = self.user_input.value
        mentioned_user = None

        try:
            mentioned_user = await interaction.guild.fetch_member(int(user_input))
        except ValueError:
            mentioned_user = interaction.guild.get_member(int(user_input[2:-1]))  # –£–±–∏—Ä–∞–µ–º <@ –∏ >

        if not mentioned_user:
            await interaction.response.send_message("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.", ephemeral=True)
            return

        perms = discord.PermissionOverwrite(manage_channels=True)
        await self.voice_channel.set_permissions(mentioned_user, overwrite=perms)
        await interaction.response.send_message(f"–í–ª–∞–¥–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–æ–º –ø–µ—Ä–µ–¥–∞–Ω–æ {mentioned_user.mention}.", ephemeral=True)

@bot.event
async def on_interaction(interaction: discord.Interaction):
    if interaction.type == discord.InteractionType.component:
        custom_id = interaction.data["custom_id"]
        if custom_id in BUTTONS:
            await handle_button_click(interaction, custom_id)

async def handle_button_click(interaction: discord.Interaction, custom_id: str):
    user = interaction.user
    voice_channel = user.voice.channel if user.voice else None

    if not voice_channel:
        msg = await interaction.response.send_message("–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
        await remove_message_after_delay(msg, 10)
        return

    if not voice_channel.permissions_for(interaction.guild.me).manage_channels:
        await voice_channel.set_permissions(interaction.guild.me, manage_channels=True, connect=True, speak=True)

    if not voice_channel.permissions_for(user).manage_channels:
        msg = await interaction.response.send_message("–í—ã –Ω–µ –≤–ª–∞–¥–µ–ª–µ—Ü —ç—Ç–æ–≥–æ –∫–∞–Ω–∞–ª–∞.", ephemeral=True)
        await remove_message_after_delay(msg, 10)
        return

    modals = {
        "rename_channel": RenameChannelModal,
        "change_bitrate": ChangeBitrateModal,
        "set_slots": SetSlotsModal,
    }

    if custom_id in modals:
        modal = modals[custom_id](voice_channel)
        await interaction.response.send_modal(modal)
        return

    if custom_id == "add_slot":
        new_limit = min(voice_channel.user_limit + 1, 99)
        await voice_channel.edit(user_limit=new_limit)
        msg = await interaction.response.send_message(f"–î–æ–±–∞–≤–ª–µ–Ω 1 —Å–ª–æ—Ç. –¢–µ–ø–µ—Ä—å —Å–ª–æ—Ç–æ–≤: {new_limit}", ephemeral=True)
        await remove_message_after_delay(msg, 10)
        return

    elif custom_id == "remove_slot":
        new_limit = max(voice_channel.user_limit - 1, 0)
        await voice_channel.edit(user_limit=new_limit)
        msg = await interaction.response.send_message(f"–£–±—Ä–∞–Ω 1 —Å–ª–æ—Ç. –¢–µ–ø–µ—Ä—å —Å–ª–æ—Ç–æ–≤: {new_limit}", ephemeral=True)
        await remove_message_after_delay(msg, 10)
        return

    elif custom_id == "lock_channel":
        perms = voice_channel.overwrites_for(interaction.guild.default_role)
        perms.connect = not perms.connect if perms.connect is not None else False
        await voice_channel.set_permissions(interaction.guild.default_role, overwrite=perms)
        status = "–∑–∞–∫—Ä—ã—Ç" if not perms.connect else "–æ—Ç–∫—Ä—ã—Ç"
        msg = await interaction.response.send_message(f"–ö–∞–Ω–∞–ª —Ç–µ–ø–µ—Ä—å {status} –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.", ephemeral=True)
        await remove_message_after_delay(msg, 10)
        return

    if custom_id == "toggle_voice":
        mentioned_user = None
        msg = await interaction.response.send_message("–£–∫–∞–∂–∏—Ç–µ ID –∏–ª–∏ —É–ø–æ–º—è–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è.",
                                                ephemeral=True)
        await remove_message_after_delay(msg, 10)

        def check(msg):
            return msg.author == user and msg.channel == interaction.channel

        try:
            msg = await bot.wait_for("message", check=check, timeout=60.0)
            await msg.delete()

            if msg.mentions:
                mentioned_user = msg.mentions[0]
            else:
                try:
                    mentioned_user = await interaction.guild.fetch_member(int(msg.content))
                except ValueError:
                    msg = await interaction.followup.send("–ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.", ephemeral=True)
                    await remove_message_after_delay(msg, 10)
                    return

            if not mentioned_user:
                msg = await interaction.followup.send("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.", ephemeral=True)
                await remove_message_after_delay(msg, 10)
                return

            if mentioned_user.voice.mute:
                await mentioned_user.edit(mute=False)
                msg = await interaction.followup.send(f"–°–µ—Ä–≤–µ—Ä–Ω—ã–π –º—É—Ç –¥–ª—è {mentioned_user.mention} —Å–Ω—è—Ç.", ephemeral=True)
                await remove_message_after_delay(msg, 10)
                return
            else:
                await mentioned_user.edit(mute=True)
                msg = await interaction.followup.send(f"–°–µ—Ä–≤–µ—Ä–Ω—ã–π –º—É—Ç –¥–ª—è {mentioned_user.mention} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.",
                                                    ephemeral=True)
                await remove_message_after_delay(msg, 10)
                return

        except discord.NotFound:
            msg = await interaction.followup.send("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ.", ephemeral=True)
            await remove_message_after_delay(msg, 10)
        except TimeoutError:
            msg = await interaction.followup.send("–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", ephemeral=True)
            await remove_message_after_delay(msg, 10)

    elif custom_id == "manage_permissions":
        mentioned_user = None
        msg = await interaction.response.send_message("–£–∫–∞–∂–∏—Ç–µ ID –∏–ª–∏ —É–ø–æ–º—è–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è.",
                                                ephemeral=True)
        await remove_message_after_delay(msg, 10)

        def check(msg):
            return msg.author == user and msg.channel == interaction.channel

        try:
            msg = await bot.wait_for("message", check=check, timeout=60.0)
            await msg.delete()

            if msg.mentions:
                mentioned_user = msg.mentions[0]
            else:
                try:
                    mentioned_user = await interaction.guild.fetch_member(int(msg.content))
                except ValueError:
                    msg = await interaction.followup.send("–ù–µ–≤–µ—Ä–Ω—ã–π ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.", ephemeral=True)
                    await remove_message_after_delay(msg, 10)
                    return

            if not mentioned_user:
                msg = await interaction.followup.send("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.", ephemeral=True)
                await remove_message_after_delay(msg, 10)
                return

            overwrites = voice_channel.overwrites_for(mentioned_user)
            overwrites.connect = not overwrites.connect if overwrites.connect is not None else True
            await voice_channel.set_permissions(mentioned_user, overwrite=overwrites)
            status = '—Ä–∞–∑—Ä–µ—à—ë–Ω' if overwrites.connect else '–∑–∞–ø—Ä–µ—â—ë–Ω'
            msg = await interaction.followup.send(f"–î–æ—Å—Ç—É–ø –¥–ª—è {mentioned_user.mention} —Ç–µ–ø–µ—Ä—å {status}.", ephemeral=True)
            await remove_message_after_delay(msg, 10)
            return

        except discord.NotFound:
            msg = await interaction.followup.send("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–ª–∏ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ.", ephemeral=True)
            await remove_message_after_delay(msg, 10)
            return

        except TimeoutError:
            msg = await interaction.followup.send("–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.", ephemeral=True)
            await remove_message_after_delay(msg, 10)
            return


async def remove_message_after_delay(msg, delay=5):
    """–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –∑–∞–¥–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ–∫—É–Ω–¥, –µ—Å–ª–∏ –æ–Ω–æ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Å–ø–∏—Å–∫—É —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö."""
    await asyncio.sleep(delay)

    allowed_phrases = [
        "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏",
        "‚ûï - –î–æ–±–∞–≤–∏—Ç—å 1 —Å–ª–æ—Ç –≤ –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É",
        "‚ûñ - –£–±—Ä–∞—Ç—å 1 —Å–ª–æ—Ç —Å –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç—ã",
        "üîí - –†–∞–∑—Ä–µ—à–∏—Ç—å/–ó–∞–ø—Ä–µ—Ç–∏—Ç—å –≤—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤ –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É",
        "üîä - –ó–∞–±—Ä–∞—Ç—å/–í—ã–¥–∞—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≥–æ–≤–æ—Ä–∏—Ç—å –≤ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç–µ",
        "üë¢ - –ò—Å–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç—ã",
        "üì∂ - –ò–∑–º–µ–Ω–∏—Ç—å –±–∏—Ç—Ä–µ–π—Ç –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç—ã",
        "#Ô∏è‚É£ - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–æ—Ç–æ–≤ –≤ –∫–æ–º–Ω–∞—Ç–µ",
        "üëë - –ü–µ—Ä–µ–¥–∞—Ç—å –ø—Ä–∞–≤–æ –≤–ª–∞–¥–µ–Ω–∏—è –∫–æ–º–Ω–∞—Ç–æ–π",
        "‚úèÔ∏è - –°–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–æ–º–Ω–∞—Ç—ã",
        "üõÇ - –í—ã–¥–∞—Ç—å/–ó–∞–±—Ä–∞—Ç—å –¥–æ—Å—Ç—É–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ –≤–∞—à—É –∫–æ–º–Ω–∞—Ç—É"
    ]

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ–Ω–æ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–º —Ñ—Ä–∞–∑–∞–º
        if isinstance(msg, discord.Message):
            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—Ä–∞–∑—ã –∏–∑ allowed_phrases, –æ–Ω–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ
            if not any(phrase in msg.content for phrase in allowed_phrases):
                await msg.delete()  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                logging.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {msg.author} —É–¥–∞–ª–µ–Ω–æ: {msg.id} - –ù–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ.")
            else:
                logging.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–µ–Ω–æ: —Å–æ–¥–µ—Ä–∂–∏—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—É—é —Ñ—Ä–∞–∑—É –∏–ª–∏ —ç–º–æ–¥–∑–∏: {msg.id}")
        else:
            logging.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–µ–Ω–æ: –æ–Ω–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ–±—ã—á–Ω—ã–º –∏–ª–∏ —ç–º–±–µ–¥-—Å–æ–æ–±—â–µ–Ω–∏–µ–º: {msg.id}")
    except discord.NotFound:
        logging.warning(f"–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è: {msg.id}. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω–æ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ.")
    except discord.Forbidden:
        logging.warning(f"–£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {msg.id}. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –±–æ—Ç–∞.")
    except discord.HTTPException as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")


@bot.event
async def on_voice_state_update(member, before, after):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏ —É –±–æ—Ç–∞
    if not member.guild.me.guild_permissions.manage_channels:
        logging.warning("–£ –±–æ—Ç–∞ –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–∞–Ω–∞–ª–∞–º–∏.")
        return


    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à–µ–ª –≤ "–°–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª"
    if after.channel and after.channel.name == CREATE_CHANNEL_NAME:
        logging.info(f"{member.name} –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –∫–∞–Ω–∞–ª—É '–°–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª'")
        category = after.channel.category

        if category is not None:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∫–∞–Ω–∞–ª –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            existing_channel = discord.utils.get(category.voice_channels, name=f"{member.display_name}")
            if existing_channel is None:
                new_channel = await category.create_voice_channel(name=f"{member.display_name}")

                # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ (—Ä–∞–∑—Ä–µ—à–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–æ–∑–¥–∞—Ç–µ–ª—é —É–ø—Ä–∞–≤–ª—è—Ç—å –∫–∞–Ω–∞–ª–æ–º)
                overwrites = {
                    member: discord.PermissionOverwrite(manage_channels=True, connect=True, speak=True),
                    member.guild.me: discord.PermissionOverwrite(manage_channels=True, connect=True, speak=True)  # –ü—Ä–∞–≤–∞ –±–æ—Ç–∞
                }
                await new_channel.edit(overwrites=overwrites)

                await member.move_to(new_channel)
                logging.info(f"–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª: {new_channel.name} –¥–ª—è {member.name}")
            else:
                await member.move_to(existing_channel)
                logging.info(f"–ü–µ—Ä–µ–º–µ—â–µ–Ω –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–∞–Ω–∞–ª: {existing_channel.name} –¥–ª—è {member.name}")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–∫–∏–Ω—É–ª –∫–∞–Ω–∞–ª –∏ –æ–Ω –ø—É—Å—Ç–æ–π
    if before.channel and before.channel.name not in {CREATE_CHANNEL_NAME, AFK_CHANNEL_NAME}:
        await check_and_delete_channel(before.channel)

    if after.channel:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–æ—à–µ–ª –≤ –∫–∞–Ω–∞–ª –∏ –±—ã–ª –∑–∞–º—É—á–µ–Ω, —Å–Ω–∏–º–∞–µ–º –º—É—Ç
        if before.channel != after.channel and before.channel is not None:
            perms = before.channel.overwrites_for(member)
            if perms.speak is False:
                perms.speak = True
                await before.channel.set_permissions(member, overwrite=perms)
                await member.send("–í–∞—à –º—É—Ç –±—ã–ª —Å–Ω—è—Ç, —Ç–∞–∫ –∫–∞–∫ –≤—ã –ø–æ–∫–∏–Ω—É–ª–∏ –∫–∞–Ω–∞–ª –∏ –≤–µ—Ä–Ω—É–ª–∏—Å—å.")
                logging.info(f"–ú—É—Ç —Å–Ω—è—Ç —Å {member.name} –≤ –∫–∞–Ω–∞–ª–µ {before.channel.name}.")
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à–µ–ª –≤ –∫–∞–Ω–∞–ª, –∏ –æ–Ω –±—ã–ª –∑–∞–º—É—á–µ–Ω
        if after.channel and before.channel != after.channel:
            perms = after.channel.overwrites_for(member)
            if perms.speak is False:
                perms.speak = True
                await after.channel.set_permissions(member, overwrite=perms)
                await member.send("–í–∞—à –º—É—Ç –±—ã–ª —Å–Ω—è—Ç, —Ç–∞–∫ –∫–∞–∫ –≤—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –∫–∞–Ω–∞–ª.")
                logging.info(f"–ú—É—Ç —Å–Ω—è—Ç —Å {member.name} –≤ –∫–∞–Ω–∞–ª–µ {after.channel.name}.")

async def check_and_delete_channel(channel):
    category = discord.utils.get(channel.guild.categories, name=VOICE_CHANNELS_CATEGORY_NAME)
    if (channel.category == category and len(channel.members) == 0
        and channel.name not in {CREATE_CHANNEL_NAME, AFK_CHANNEL_NAME}):
        await delete_channel(channel)


async def delete_channel(channel):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∫–∞–Ω–∞–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è AFK –∏–ª–∏ –∫–∞–Ω–∞–ª–æ–º "–°–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª"
    if channel.name not in {AFK_CHANNEL_NAME, CREATE_CHANNEL_NAME}:
        try:
            await channel.delete()
            logging.info(f"–£–¥–∞–ª–µ–Ω –∫–∞–Ω–∞–ª: {channel.name}")
        except discord.Forbidden:
            logging.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∫–∞–Ω–∞–ª: {channel.name}. –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤.")
        except discord.HTTPException as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞: {channel.name}. –û—à–∏–±–∫–∞: {e}")
    else:
        logging.info(f"–ö–∞–Ω–∞–ª {channel.name} –Ω–µ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω.")


@bot.command()
async def clear_channel(ctx):
    """–û—á–∏—â–∞–µ—Ç –≤—Å–µ –Ω–µ–Ω—É–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ, –∫—Ä–æ–º–µ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∫–Ω–æ–ø–∫–∞–º–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏."""
    if ctx.channel.id != SETTINGS_CHANNEL_ID:
        await ctx.send("–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –∫–∞–Ω–∞–ª–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫.")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
    if not ctx.channel.permissions_for(ctx.guild.me).manage_messages:
        await ctx.send("–£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π.")
        return

    # –£–¥–∞–ª—è–µ–º –≤—Å–µ –Ω–µ–Ω—É–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª–µ
    async for msg in ctx.channel.history(limit=100):
        if not msg.embeds and not msg.components and msg.author != bot.user:
            try:
                await msg.delete()
                logging.info(f"–£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {msg.author}: {msg.content}")
            except discord.Forbidden:
                logging.warning(f"–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {msg.id}")
            except discord.NotFound:
                logging.warning("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è.")
            except discord.HTTPException as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

    await ctx.send("–ö–∞–Ω–∞–ª –æ—á–∏—â–µ–Ω –æ—Ç –Ω–µ–Ω—É–∂–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.")

@bot.event
async def on_message(message):
    """–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å ephemeral=True."""
    if message.channel.id == SETTINGS_CHANNEL_ID:
        if not message.embeds and not message.components:
            try:
                await message.delete()
                logging.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.author} —É–¥–∞–ª–µ–Ω–æ.")
            except discord.Forbidden:
                logging.warning("–ù–µ—Ç –ø—Ä–∞–≤ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è.")
            except discord.NotFound:
                logging.warning("–°–æ–æ–±—â–µ–Ω–∏–µ —É–∂–µ —É–¥–∞–ª–µ–Ω–æ.")
            except discord.HTTPException as e:
                logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
    else:
        await bot.process_commands(message)

@bot.event
async def on_ready():
    print(f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}")
    channel = bot.get_channel(SETTINGS_CHANNEL_ID)
    if channel:
        embed = discord.Embed(title="–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω—ã–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏")
        embed.description = "\n".join([f"{button['emoji']} - {button['description']}" for button in BUTTONS.values()])
        view = ChannelSettingsView()
        message = await channel.send(embed=embed, view=view)
        bot.add_view(view)

bot.run(BOT_TOKEN)